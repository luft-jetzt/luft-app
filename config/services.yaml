# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'de'
    router.request_context.host: 'luft.jetzt'
    router.request_context.scheme: 'https'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $graphCacheDirectory: '%env(GRAPH_CACHE_DIRECTORY)%'
            $openWeatherMapAppId: '%env(OPENWEATHERMAP_APPID)%'
            $redisHost: 'redis://%env(REDIS_HOST)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Pollution\DataRetriever\DataRetrieverInterface:
        #alias: App\Pollution\DataRetriever\ChainedDataRetriever
        alias: App\Pollution\DataRetriever\PostgisDataRetriever

    App\Pollution\PollutantFactoryStrategy\PollutantFactoryStrategyInterface:
        alias: App\Pollution\PollutantFactoryStrategy\LuftdatenPollutantFactoryStrategy

    App\Pollution\PollutionDataFactory\PollutionDataFactoryInterface:
        alias: App\Pollution\PollutionDataFactory\PollutionDataFactory

    App\SeoPage\SeoPage:
        arguments:
            $sonataSeoPage: '@sonata.seo.page.default'

    App\Pollution\UniqueStrategy\UniqueStrategyInterface:
        alias: App\Pollution\UniqueStrategy\CacheUniqueStrategy

    App\Pollution\DataPersister\PersisterInterface:
        alias: App\Pollution\DataPersister\PostgisPersister

    App\Geocoding\Guesser\CityGuesser:
        $provider: '@bazinga_geocoder.provider.nominatim'

    App\Geocoding\Geocoder\Geocoder:
        $provider: '@bazinga_geocoder.provider.nominatim'

    app.geocoding_cache:
        class: Symfony\Component\Cache\Psr16Cache
        arguments: ['@app.cache.geocoding']

    Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
